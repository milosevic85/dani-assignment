package com.naloga.daniimdb.actor.repository;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import com.naloga.daniimdb.actor.Actor;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface ActorRepository extends JpaRepository<Actor, Long> {

    // list all actors
    List<Actor> findAll();

    // list actors with pagination support
    Page<Actor> findAll(Pageable pageable);

    // extra: search by first and last name
    List<Actor> findByFirstNameAndLastName(String firstName, String lastName);

    // extra: for filter by age
    @Query(value = "SELECT * FROM Actor WHERE YEAR(CURRENT_DATE()) - YEAR(born_date) > :age", nativeQuery = true)
    List<Actor> findActorsWithAgeAbove(@Param("age") int age);

    // ----------------------------------------------------------------------------------------
    // if I will need for the future: find from actor_movie table that is auto-generated by JPA
    @Query(value = "SELECT movie_id FROM actor_movie WHERE actor_id = :actorId", nativeQuery = true)
    List<Long> findMovieIdsByActorId(Long actorId);

    // if I will need for the future: find from actor_movie table that is auto-generated by JPA
    @Query(value = "SELECT actor_id FROM actor_movie WHERE movie_id = :movieId", nativeQuery = true)
    List<Long> findActorIdsByMovieId(Long movieId);
}
